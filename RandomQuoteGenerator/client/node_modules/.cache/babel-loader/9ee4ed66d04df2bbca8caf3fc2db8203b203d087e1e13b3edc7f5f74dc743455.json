{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elijah Raphael\\\\Documents\\\\A_HTML FILES\\\\Freecodecamp certification activities\\\\ReactJS-Activities\\\\random-quote-machine\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [quotesData, setQuotesData] = useState([]);\n  const [randomQuote, setRandomQuote] = useState(null);\n  const [randomPhoto, setRandomPhoto] = useState(\"\");\n  const [photoArray, setPhotoArray] = useState([]);\n  const [count, setCount] = useState(0);\n  const maxCount = 3; // Limit the number of fetches\n\n  useEffect(() => {\n    fetch(\"https://dummyjson.com/quotes\").then(res => res.json()).then(data => {\n      setQuotesData(data.quotes);\n      if (data.quotes.length > 0) {\n        setRandomQuote(data.quotes[Math.floor(Math.random() * data.quotes.length)]);\n      }\n    }).catch(error => console.error(\"Error:\", error));\n    fetch(\"http://localhost:5000/api/photo\").then(res => {\n      if (!res.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      return res.json();\n    }).then(data => {\n      console.log(\"Data received from server.js: \", data);\n      console.log(\"Data type of data received from server.js: \", typeof data);\n      setPhotoArray(data.map(item => item.urls.full));\n      console.log(\"PhotoArray: \", photoArray);\n      setRandomPhoto(data[Math.floor(Math.random() * data.length)].urls.full);\n      setCount(1);\n    }).catch(error => console.error(\"Error:\", error));\n    setRandomPhoto();\n  }, []); // Only run once on component mount\n\n  const getRandomIndex = () => {\n    if (quotesData.length > 0) {\n      const randomIndex = Math.floor(Math.random() * quotesData.length);\n      setRandomQuote(quotesData[randomIndex]);\n    }\n    if (count < maxCount) {\n      fetch(\"http://localhost:5000/api/photo\").then(res => {\n        if (!res.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        return res.json();\n      }).then(data => {\n        setPhotoArray(prevArray => [...prevArray, ...data.map(item => item.urls.full)]);\n        console.log(\"PhotoArray: \", photoArray);\n        setRandomPhoto(data[Math.floor(Math.random() * data.length)].urls.full);\n        setCount(count + 1);\n      }).catch(error => console.error(\"Error:\", error));\n    } else {\n      setRandomPhoto(photoArray[Math.floor(Math.random() * photoArray.length)]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body flex\",\n    style: {\n      backgroundImage: `url(${randomPhoto})`,\n      backgroundSize: \"cover\",\n      backgroundPosition: \"center\",\n      transition: \"background-image 0.5s ease-in-out\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quote-box flex\",\n      id: \"quote-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quote-border flex\",\n        id: \"text\",\n        children: randomQuote ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: randomQuote.quote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 26\n        }, this) : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"authorContainer\",\n        id: \"author\",\n        children: randomQuote ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"author\",\n          children: randomQuote.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 26\n        }, this) : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          class: \"fa-brands fa-square-twitter fa-lg\",\n          href: \"twitter.com/intent/tweet\",\n          target: \"_blank\",\n          id: \"tweet-quote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"fa-solid fa-forward\",\n          id: \"new-quote\",\n          onClick: getRandomIndex\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RpEWNJQT99eQVqqz1gGy/cBRpIY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","App","_s","quotesData","setQuotesData","randomQuote","setRandomQuote","randomPhoto","setRandomPhoto","photoArray","setPhotoArray","count","setCount","maxCount","fetch","then","res","json","data","quotes","length","Math","floor","random","catch","error","console","ok","Error","log","map","item","urls","full","getRandomIndex","randomIndex","prevArray","className","style","backgroundImage","backgroundSize","backgroundPosition","transition","children","id","quote","fileName","_jsxFileName","lineNumber","columnNumber","author","class","href","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Elijah Raphael/Documents/A_HTML FILES/Freecodecamp certification activities/ReactJS-Activities/random-quote-machine/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport './App.css';\n\nfunction App() {\n  const [quotesData, setQuotesData] = useState([]);\n  const [randomQuote, setRandomQuote] = useState(null);\n  const [randomPhoto, setRandomPhoto] = useState(\"\");\n  const [photoArray, setPhotoArray] = useState([]);\n  const [count, setCount] = useState(0);\n  const maxCount = 3; // Limit the number of fetches\n\n  useEffect(() => {\n    fetch(\"https://dummyjson.com/quotes\")\n      .then(res => res.json())\n      .then(data => {\n        setQuotesData(data.quotes);\n        if (data.quotes.length > 0) {\n          setRandomQuote(data.quotes[Math.floor(Math.random() * data.quotes.length)]);\n        }\n      })\n      .catch(error => console.error(\"Error:\", error));\n\n    fetch(\"http://localhost:5000/api/photo\")\n      .then(res => {\n        if (!res.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        return res.json();\n      })\n      .then(data => {\n        console.log(\"Data received from server.js: \", data);\n        console.log(\"Data type of data received from server.js: \", typeof data);\n        setPhotoArray(data.map(item => item.urls.full)); \n        console.log(\"PhotoArray: \", photoArray);\n        setRandomPhoto(data[Math.floor(Math.random() * data.length)].urls.full); \n        setCount(1);\n      })\n      .catch(error => console.error(\"Error:\", error));\n      setRandomPhoto()\n  }, []); // Only run once on component mount\n  \n  const getRandomIndex = () => {\n    if (quotesData.length > 0) {\n      const randomIndex = Math.floor(Math.random() * quotesData.length);\n      setRandomQuote(quotesData[randomIndex]);\n    }\n\n    if (count < maxCount) {\n      fetch(\"http://localhost:5000/api/photo\")\n        .then(res => {\n          if (!res.ok) {\n            throw new Error(\"Network response was not ok\");\n          }\n          return res.json();\n        })\n        .then(data => {\n          setPhotoArray(prevArray => [...prevArray, ...data.map(item => item.urls.full)]);\n          console.log(\"PhotoArray: \", photoArray);\n          setRandomPhoto(data[Math.floor(Math.random() * data.length)].urls.full);\n          setCount(count + 1);\n        })\n        .catch(error => console.error(\"Error:\", error));\n    } else {\n      setRandomPhoto(photoArray[Math.floor(Math.random() * photoArray.length)]);\n    }\n  };\n\n  return (\n    <div\n      className=\"body flex\"\n      style={{\n        backgroundImage: `url(${randomPhoto})`,\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        transition: \"background-image 0.5s ease-in-out\",\n      }}\n    >\n      <div className=\"quote-box flex\" id=\"quote-box\">\n        <div className=\"quote-border flex\" id=\"text\">\n          {randomQuote ? <p>{randomQuote.quote}</p> : \"\"}\n        </div>\n        \n        <div className=\"authorContainer\" id=\"author\">\n          {randomQuote ? <p className=\"author\">{randomQuote.author}</p> : \"\"}\n        </div>\n\n        <div className=\"buttons\">\n\n          <a class=\"fa-brands fa-square-twitter fa-lg\" href=\"twitter.com/intent/tweet\" target=\"_blank\" id=\"tweet-quote\">\n          </a>\n\n          <button class=\"fa-solid fa-forward\" id=\"new-quote\" onClick={getRandomIndex}>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}