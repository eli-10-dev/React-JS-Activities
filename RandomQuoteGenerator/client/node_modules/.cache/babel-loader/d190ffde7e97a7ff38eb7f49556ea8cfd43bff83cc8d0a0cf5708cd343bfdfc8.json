{"ast":null,"code":"import{useState,useEffect}from\"react\";import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[quotesData,setQuotesData]=useState([]);const[randomQuote,setRandomQuote]=useState(null);const[randomPhoto,setRandomPhoto]=useState(\"\");const[photoArray,setPhotoArray]=useState([]);const[count,setCount]=useState(0);const maxCount=3;// Limit the number of fetches\nuseEffect(()=>{fetch(\"https://dummyjson.com/quotes\").then(res=>res.json()).then(data=>{setQuotesData(data.quotes);if(data.quotes.length>0){setRandomQuote(data.quotes[Math.floor(Math.random()*data.quotes.length)]);}}).catch(error=>console.error(\"Error:\",error));fetch(\"http://localhost:5000/api/photo\").then(res=>{if(!res.ok){throw new Error(\"Network response was not ok\");}return res.json();}).then(data=>{// console.log(\"Data received from server.js: \", data);\n// console.log(\"Data type of data received from server.js: \", typeof data);\nconst urls=data.map(item=>item.urls.full);setPhotoArray(urls);// console.log(\"PhotoArray: \", photoArray);\nif(urls.length>0){setRandomPhoto(urls[Math.floor(Math.random()*urls.length)]);}else{setRandomPhoto(\"https://static.vecteezy.com/system/resources/thumbnails/040/890/255/small_2x/ai-generated-empty-wooden-table-on-the-natural-background-for-product-display-free-photo.jpg\");}setCount(1);}).catch(error=>console.error(\"Error:\",error));setRandomPhoto(\"https://static.vecteezy.com/system/resources/thumbnails/040/890/255/small_2x/ai-generated-empty-wooden-table-on-the-natural-background-for-product-display-free-photo.jpg\");},[]);// Only run once on component mount\nconst getRandomIndex=()=>{if(quotesData.length>0){const randomIndex=Math.floor(Math.random()*quotesData.length);setRandomQuote(quotesData[randomIndex]);}if(count<maxCount){fetch(\"http://localhost:5000/api/photo\").then(res=>{if(!res.ok){throw new Error(\"Network response was not ok\");}return res.json();}).then(data=>{setPhotoArray(prevArray=>[...prevArray,...data.map(item=>item.urls.full)]);// console.log(\"PhotoArray: \", photoArray);\nsetRandomPhoto(data[Math.floor(Math.random()*data.length)].urls.full);setCount(count+1);}).catch(error=>console.error(\"Error:\",error));}else{setRandomPhoto(photoArray[Math.floor(Math.random()*photoArray.length)]);}};return/*#__PURE__*/_jsx(\"div\",{className:\"body flex\",style:{backgroundImage:`url(${randomPhoto})`,backgroundSize:\"cover\",backgroundPosition:\"center\",transition:\"background-image 0.5s ease-in-out\"},children:/*#__PURE__*/_jsxs(\"div\",{className:\"quote-box flex\",id:\"quote-box\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"quote-border flex\",id:\"text\",children:randomQuote?/*#__PURE__*/_jsx(\"p\",{children:randomQuote.quote}):\"\"}),/*#__PURE__*/_jsx(\"div\",{className:\"authorContainer\",id:\"author\",children:randomQuote?/*#__PURE__*/_jsx(\"p\",{className:\"author\",children:randomQuote.author}):\"\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"buttons flex\",children:[/*#__PURE__*/_jsx(\"a\",{className:\"fa-brands fa-square-twitter fa-lg\",href:\"twitter.com/intent/tweet\",target:\"_blank\",id:\"tweet-quote\"}),/*#__PURE__*/_jsx(\"button\",{className:\"fa-solid fa-square-caret-right fa-lg\",id:\"new-quote\",onClick:getRandomIndex})]})]})});}export default App;","map":{"version":3,"names":["useState","useEffect","jsx","_jsx","jsxs","_jsxs","App","quotesData","setQuotesData","randomQuote","setRandomQuote","randomPhoto","setRandomPhoto","photoArray","setPhotoArray","count","setCount","maxCount","fetch","then","res","json","data","quotes","length","Math","floor","random","catch","error","console","ok","Error","urls","map","item","full","getRandomIndex","randomIndex","prevArray","className","style","backgroundImage","backgroundSize","backgroundPosition","transition","children","id","quote","author","href","target","onClick"],"sources":["C:/Users/Elijah Raphael/Documents/GitHub/React-JS-Activities/RandomQuoteGenerator/client/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [quotesData, setQuotesData] = useState([]);\r\n  const [randomQuote, setRandomQuote] = useState(null);\r\n  const [randomPhoto, setRandomPhoto] = useState(\"\");\r\n  const [photoArray, setPhotoArray] = useState([]);\r\n  const [count, setCount] = useState(0);\r\n  const maxCount = 3; // Limit the number of fetches\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://dummyjson.com/quotes\")\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setQuotesData(data.quotes);\r\n        if (data.quotes.length > 0) {\r\n          setRandomQuote(data.quotes[Math.floor(Math.random() * data.quotes.length)]);\r\n        }\r\n      })\r\n      .catch(error => console.error(\"Error:\", error));\r\n\r\n    fetch(\"http://localhost:5000/api/photo\")\r\n      .then(res => {\r\n        if (!res.ok) {\r\n          throw new Error(\"Network response was not ok\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(data => {\r\n        // console.log(\"Data received from server.js: \", data);\r\n        // console.log(\"Data type of data received from server.js: \", typeof data);\r\n        const urls = data.map(item => item.urls.full);\r\n        setPhotoArray(urls); \r\n        // console.log(\"PhotoArray: \", photoArray);\r\n\r\n        if (urls.length > 0){\r\n          setRandomPhoto(urls[Math.floor(Math.random() * urls.length)]);\r\n        } else {\r\n          setRandomPhoto(\"https://static.vecteezy.com/system/resources/thumbnails/040/890/255/small_2x/ai-generated-empty-wooden-table-on-the-natural-background-for-product-display-free-photo.jpg\");\r\n        }\r\n        \r\n        setCount(1);\r\n      })\r\n      .catch(error => console.error(\"Error:\", error));\r\n      setRandomPhoto(\"https://static.vecteezy.com/system/resources/thumbnails/040/890/255/small_2x/ai-generated-empty-wooden-table-on-the-natural-background-for-product-display-free-photo.jpg\");\r\n  }, []); // Only run once on component mount\r\n  \r\n  const getRandomIndex = () => {\r\n    if (quotesData.length > 0) {\r\n      const randomIndex = Math.floor(Math.random() * quotesData.length);\r\n      setRandomQuote(quotesData[randomIndex]);\r\n    }\r\n\r\n    if (count < maxCount) {\r\n      fetch(\"http://localhost:5000/api/photo\")\r\n        .then(res => {\r\n          if (!res.ok) {\r\n            throw new Error(\"Network response was not ok\");\r\n          }\r\n          return res.json();\r\n        })\r\n        .then(data => {\r\n          setPhotoArray(prevArray => [...prevArray, ...data.map(item => item.urls.full)]);\r\n          // console.log(\"PhotoArray: \", photoArray);\r\n          setRandomPhoto(data[Math.floor(Math.random() * data.length)].urls.full);\r\n          setCount(count + 1);\r\n        })\r\n        .catch(error => console.error(\"Error:\", error));\r\n    } else {\r\n      setRandomPhoto(photoArray[Math.floor(Math.random() * photoArray.length)]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"body flex\"\r\n      style={{\r\n        backgroundImage: `url(${randomPhoto})`,\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center\",\r\n        transition: \"background-image 0.5s ease-in-out\",\r\n      }}\r\n    >\r\n      <div className=\"quote-box flex\" id=\"quote-box\">\r\n        <div className=\"quote-border flex\" id=\"text\">\r\n          {randomQuote ? <p>{randomQuote.quote}</p> : \"\"}\r\n        </div>\r\n        \r\n        <div className=\"authorContainer\" id=\"author\">\r\n          {randomQuote ? <p className=\"author\">{randomQuote.author}</p> : \"\"}\r\n        </div>\r\n\r\n        <div className=\"buttons flex\">\r\n\r\n          <a className=\"fa-brands fa-square-twitter fa-lg\" href=\"twitter.com/intent/tweet\" target=\"_blank\" id=\"tweet-quote\">\r\n          </a>\r\n   \r\n          <button className=\"fa-solid fa-square-caret-right fa-lg\" id=\"new-quote\" onClick={getRandomIndex}>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}