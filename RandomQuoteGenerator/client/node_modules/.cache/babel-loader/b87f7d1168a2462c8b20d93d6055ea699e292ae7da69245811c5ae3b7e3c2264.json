{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elijah Raphael\\\\Documents\\\\A_HTML FILES\\\\Freecodecamp certification activities\\\\ReactJS-Activities\\\\random-quote-machine\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet quotesData = [];\nfunction App() {\n  _s();\n  const [quotesData, setQuotesData] = useState([]);\n  const [randomQuote, setRandomQuote] = useState(null);\n  const [randomPhoto, setRandomPhoto] = useState(\"\");\n  useEffect(() => {\n    fetch(\"https://dummyjson.com/quotes\").then(res => res.json()).then(data => {\n      // console.log(data);\n      // console.log(data.quotes[0]);\n      setQuotesData(data.quotes);\n      data.quotes.length > 0 ? setRandomQuote(data.quotes[Math.floor(Math.random() * quotesData.length)]) : console.log(\"No\");\n    }).catch(error => console.error(\"Error:\", error));\n    https:\n    //api.unsplash.com/photos/random?client_id=fE76L25SribEQBR4a46w9PxOK3Wb3Meoeg8rMc-6j0g\n    fetch(\"http://localhost:5000/api/photo\").then(res => {\n      if (!res.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      return res.json();\n    }).then(data => {\n      console.log(\"Data from backend: \", data);\n    }).catch(error => console.error(\"Error: \", error));\n  }, []);\n  const getRandomIndex = () => {\n    if (quotesData.length > 0) {\n      const randomIndex = Math.floor(Math.random() * quotesData.length);\n      setRandomQuote(quotesData[randomIndex]);\n      console.log(setRandomQuote);\n    } else {\n      console.warn(\"Quotes not loaded yet.\");\n      return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body flex\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quote-container flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quoteBox flex\",\n        children: randomQuote ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: randomQuote.quote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 26\n        }, this) : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"authorContainer\",\n        children: randomQuote ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"author\",\n          children: randomQuote.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 26\n        }, this) : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: getRandomIndex,\n          children: \"More Quotes!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5d8rRnHlzstsX4d0M5vQdJEqZ0k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","quotesData","App","_s","setQuotesData","randomQuote","setRandomQuote","randomPhoto","setRandomPhoto","fetch","then","res","json","data","quotes","length","Math","floor","random","console","log","catch","error","https","ok","Error","getRandomIndex","randomIndex","warn","className","children","quote","fileName","_jsxFileName","lineNumber","columnNumber","author","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Elijah Raphael/Documents/A_HTML FILES/Freecodecamp certification activities/ReactJS-Activities/random-quote-machine/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport './App.css';\n\nlet quotesData = [];\n\nfunction App() {\n  const [quotesData, setQuotesData] = useState([]);\n  const [randomQuote, setRandomQuote] = useState(null);\n  const [randomPhoto, setRandomPhoto] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\"https://dummyjson.com/quotes\")\n      .then(res => res.json())\n      .then(data => {\n        // console.log(data);\n        // console.log(data.quotes[0]);\n        setQuotesData(data.quotes);\n        data.quotes.length > 0 ? setRandomQuote(data.quotes[Math.floor(Math.random() * quotesData.length)]) : console.log(\"No\"); \n      })\n      .catch(error => console.error(\"Error:\", error));\n      https://api.unsplash.com/photos/random?client_id=fE76L25SribEQBR4a46w9PxOK3Wb3Meoeg8rMc-6j0g\n      fetch(\"http://localhost:5000/api/photo\")\n        .then(res => {\n          if (!res.ok){\n            throw new Error(\"Network response was not ok\");\n          }\n          return res.json();\n        })\n        .then(data => {\n          console.log(\"Data from backend: \", data);\n        })\n        .catch(error => console.error(\"Error: \", error ));\n  }, []);\n\n    const getRandomIndex = () => {\n      if (quotesData.length > 0){\n        const randomIndex = Math.floor(Math.random() * quotesData.length);\n        setRandomQuote(quotesData[randomIndex]);\n        console.log(setRandomQuote);\n      } else {\n        console.warn(\"Quotes not loaded yet.\");\n        return null;\n      }\n    }\n\n  return (\n    <div className=\"body flex\">\n      <div className=\"quote-container flex\">\n\n        <div className=\"quoteBox flex\">\n          {randomQuote ? <p>{randomQuote.quote}</p> : \"\"}\n        </div>\n\n        <div className=\"authorContainer\">\n          {randomQuote ? <p className=\"author\">{randomQuote.author}</p> : \"\"}\n        </div>\n\n        <div className=\"buttons\">\n          <button onClick={getRandomIndex}>More Quotes!</button>\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}