{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elijah Raphael\\\\Documents\\\\A_HTML FILES\\\\Freecodecamp certification activities\\\\ReactJS-Activities\\\\random-quote-machine\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [quotesData, setQuotesData] = useState([]);\n  const [randomQuote, setRandomQuote] = useState(null);\n  const [randomPhoto, setRandomPhoto] = useState(\"\");\n  const [photoArray, setPhotoArray] = useState([]);\n  const [count, setCount] = useState(0);\n  const maxCount = useEffect(() => {\n    fetch(\"https://dummyjson.com/quotes\").then(res => res.json()).then(data => {\n      setQuotesData(data.quotes);\n      if (data.quotes.length > 0) {\n        setRandomQuote(data.quotes[Math.floor(Math.random() * data.quotes.length)]);\n      }\n    }).catch(error => console.error(\"Error:\", error));\n    fetch(\"http://localhost:5000/api/photo\").then(res => {\n      if (!res.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      return res.json();\n    }).then(data => {\n      setPhotoArray([data.urls.full]);\n      setRandomPhoto(data.urls.full);\n      setCount(count => count + 1);\n    }).catch(error => console.error(\"Error:\", error));\n  }, []);\n  const getRandomIndex = () => {\n    if (quotesData.length > 0) {\n      const randomIndex = Math.floor(Math.random() * quotesData.length);\n      setRandomQuote(quotesData[randomIndex]);\n    }\n    fetch(\"http://localhost:5000/api/photo\").then(res => {\n      if (!res.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      return res.json();\n    }).then(data => {\n      setPhotoArray(prevArray => [...prevArray, data.urls.full]);\n      setRandomPhoto(data.urls.full);\n    }).catch(error => console.error(\"Error:\", error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body flex\",\n    style: {\n      background: `url(${randomPhoto})`,\n      backgroundSize: \"cover\",\n      backgroundPosition: \"center\",\n      transition: \"background-image 0.5s ease-in-out\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quote-box flex\",\n      id: \"quote-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quote-border flex\",\n        id: \"text\",\n        children: randomQuote ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: randomQuote.quote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 26\n        }, this) : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"authorContainer\",\n        id: \"author\",\n        children: randomQuote ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"author\",\n          children: randomQuote.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 26\n        }, this) : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"new-quote\",\n          onClick: getRandomIndex,\n          children: \"More Quotes!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wFXtvHfcruoYxmC7RVzc0PdnJJs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","App","_s","quotesData","setQuotesData","randomQuote","setRandomQuote","randomPhoto","setRandomPhoto","photoArray","setPhotoArray","count","setCount","maxCount","fetch","then","res","json","data","quotes","length","Math","floor","random","catch","error","console","ok","Error","urls","full","getRandomIndex","randomIndex","prevArray","className","style","background","backgroundSize","backgroundPosition","transition","children","id","quote","fileName","_jsxFileName","lineNumber","columnNumber","author","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Elijah Raphael/Documents/A_HTML FILES/Freecodecamp certification activities/ReactJS-Activities/random-quote-machine/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport './App.css';\n\nfunction App() {\n  const [quotesData, setQuotesData] = useState([]);\n  const [randomQuote, setRandomQuote] = useState(null);\n  const [randomPhoto, setRandomPhoto] = useState(\"\");\n  const [photoArray, setPhotoArray] = useState([]);\n  const [count, setCount] = useState(0);\n  const maxCount = \n\n  useEffect(() => {\n    fetch(\"https://dummyjson.com/quotes\")\n      .then(res => res.json())\n      .then(data => {\n        setQuotesData(data.quotes);\n        if (data.quotes.length > 0) {\n          setRandomQuote(data.quotes[Math.floor(Math.random() * data.quotes.length)]);\n        }\n      })\n      .catch(error => console.error(\"Error:\", error));\n\n    fetch(\"http://localhost:5000/api/photo\")\n      .then(res => {\n        if (!res.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        return res.json();\n      })\n      .then(data => {\n        setPhotoArray([data.urls.full]);\n        setRandomPhoto(data.urls.full);\n        setCount(count => count + 1);\n      })\n      .catch(error => console.error(\"Error:\", error));\n  }, []);\n\n  const getRandomIndex = () => {\n    if (quotesData.length > 0) {\n      const randomIndex = Math.floor(Math.random() * quotesData.length);\n      setRandomQuote(quotesData[randomIndex]);\n    }\n\n    fetch(\"http://localhost:5000/api/photo\")\n      .then(res => {\n        if (!res.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        return res.json();\n      })\n      .then(data => {\n        setPhotoArray(prevArray => [...prevArray, data.urls.full]);\n        setRandomPhoto(data.urls.full);\n      })\n      .catch(error => console.error(\"Error:\", error));\n  };\n\n  return (\n    <div\n      className=\"body flex\"\n      style={{\n        background: `url(${randomPhoto})`,\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        transition: \"background-image 0.5s ease-in-out\",\n      }}\n    >\n      <div className=\"quote-box flex\" id=\"quote-box\">\n        <div className=\"quote-border flex\" id=\"text\">\n          {randomQuote ? <p>{randomQuote.quote}</p> : \"\"}\n        </div>\n\n        <div className=\"authorContainer\" id=\"author\">\n          {randomQuote ? <p className=\"author\">{randomQuote.author}</p> : \"\"}\n        </div>\n\n        <div className=\"buttons\">\n          <button id=\"new-quote\" onClick={getRandomIndex}>\n            More Quotes!\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}