{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elijah Raphael\\\\Documents\\\\A_HTML FILES\\\\Freecodecamp certification activities\\\\ReactJS-Activities\\\\random-quote-machine\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet quotesData = [];\nfunction App() {\n  _s();\n  const [quotesData, setQuotesData] = useState([]);\n  const [randomQuote, setRandomQuote] = useState(null);\n  useEffect(() => {\n    fetch(\"https://dummyjson.com/quotes\").then(res => res.json()).then(data => {\n      console.log(data.quotes[0]);\n      setQuotesData(data.quotes);\n    }).catch(error => console.error(\"Error:\", error));\n  }, []);\n  const getRandomIndex = () => {\n    if (quotesData.length > 0) {\n      const randomIndex = Math.floor(Math.random() * quotesData.length);\n      setRandomQuote(quotesData[randomIndex]);\n      console.log(setRandomQuote);\n    } else {\n      console.warn(\"Quotes not loaded yet.\");\n      return null;\n    }\n  };\n  getRando;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body flex\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quote-container flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quote\",\n        children: JSON.stringify(randomQuote.quote)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"author\",\n        children: \"- Author\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getRandomIndex,\n        children: \"Next Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"HG6hLw3AuOoZeTSX1cy4uaWyJBM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","quotesData","App","_s","setQuotesData","randomQuote","setRandomQuote","fetch","then","res","json","data","console","log","quotes","catch","error","getRandomIndex","length","randomIndex","Math","floor","random","warn","getRando","className","children","JSON","stringify","quote","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Elijah Raphael/Documents/A_HTML FILES/Freecodecamp certification activities/ReactJS-Activities/random-quote-machine/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport './App.css';\n\nlet quotesData = [];\n\nfunction App() {\n  const [quotesData, setQuotesData] = useState([]);\n  const [randomQuote, setRandomQuote] = useState(null);\n\n  useEffect(() => {\n    fetch(\"https://dummyjson.com/quotes\")\n      .then(res => res.json())\n      .then(data => {\n        console.log(data.quotes[0]);\n        setQuotesData(data.quotes);\n      })\n      .catch(error => console.error(\"Error:\", error));\n  }, []);\n\n    const getRandomIndex = () => {\n      if (quotesData.length > 0){\n        const randomIndex = Math.floor(Math.random() * quotesData.length);\n        setRandomQuote(quotesData[randomIndex]);\n        console.log(setRandomQuote);\n      } else {\n        console.warn(\"Quotes not loaded yet.\");\n        return null;\n      }\n    }\n\n  getRando\n  return (\n    <div className=\"body flex\">\n      <div className=\"quote-container flex\">\n\n        <div className=\"quote\">\n          {JSON.stringify(randomQuote.quote)}\n        </div>\n\n        <div className=\"author\">\n          - Author\n        </div>\n\n        <button onClick={getRandomIndex}>Next Quote</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,IAAIC,UAAU,GAAG,EAAE;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACF,UAAU,EAAEG,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACdS,KAAK,CAAC,8BAA8B,CAAC,CAClCC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;MACZC,OAAO,CAACC,GAAG,CAACF,IAAI,CAACG,MAAM,CAAC,CAAC,CAAC,CAAC;MAC3BV,aAAa,CAACO,IAAI,CAACG,MAAM,CAAC;IAC5B,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIJ,OAAO,CAACI,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC;EACnD,CAAC,EAAE,EAAE,CAAC;EAEJ,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAIhB,UAAU,CAACiB,MAAM,GAAG,CAAC,EAAC;MACxB,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGrB,UAAU,CAACiB,MAAM,CAAC;MACjEZ,cAAc,CAACL,UAAU,CAACkB,WAAW,CAAC,CAAC;MACvCP,OAAO,CAACC,GAAG,CAACP,cAAc,CAAC;IAC7B,CAAC,MAAM;MACLM,OAAO,CAACW,IAAI,CAAC,wBAAwB,CAAC;MACtC,OAAO,IAAI;IACb;EACF,CAAC;EAEHC,QAAQ;EACR,oBACExB,OAAA;IAAKyB,SAAS,EAAC,WAAW;IAAAC,QAAA,eACxB1B,OAAA;MAAKyB,SAAS,EAAC,sBAAsB;MAAAC,QAAA,gBAEnC1B,OAAA;QAAKyB,SAAS,EAAC,OAAO;QAAAC,QAAA,EACnBC,IAAI,CAACC,SAAS,CAACvB,WAAW,CAACwB,KAAK;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC,eAENjC,OAAA;QAAKyB,SAAS,EAAC,QAAQ;QAAAC,QAAA,EAAC;MAExB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAENjC,OAAA;QAAQkC,OAAO,EAAEjB,cAAe;QAAAS,QAAA,EAAC;MAAU;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC9B,EAAA,CA1CQD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AA4CZ,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}